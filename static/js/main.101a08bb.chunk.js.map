{"version":3,"sources":["images/logo.svg","images/userpic.png","components/Header.js","utils/Api.js","utils/constants.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","src","logo","alt","api","token","url","this","_token","_url","res","ok","json","Promise","reject","status","error","console","message","fetch","headers","authorization","then","_handleResponse","catch","_handleError","name","link","body","JSON","stringify","method","id","bio","about","data","Card","props","card","onClick","onCardClick","type","likes","length","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getUserInfo","avatar","getInitialCards","onEditAvatar","defaultAvatar","onEditProfile","onAddPlace","map","key","_id","Footer","PopupWithForm","isOpen","onClose","noValidate","action","children","ImagePopup","selectedCard","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setImagePopupOpen","setSelectedCard","closeAllPopups","placeholder","required","minLength","maxLength","disabled","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.101a08bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2b1f7ee5.svg\";","module.exports = __webpack_public_path__ + \"static/media/userpic.c3b119f7.png\";","import React from 'react';\r\nimport logo from \"../images/logo.svg\";\r\n\r\nfunction Header() {\r\n  return(\r\n    <header className=\"header\">\r\n      <a href=\"/\"><img src={logo} alt=\"Логотип Место\" className=\"header__logo\" /></a>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import {identity} from './constants'\r\n\r\nclass Api {\r\n  constructor({token, url}) {\r\n    this._token = token;\r\n    this._url = url;\r\n  }\r\n\r\n// response handlers\r\n\r\n  _handleResponse(res) {\r\n    if (res.ok) {        \r\n      return res.json();\r\n    } else {\r\n      return Promise.reject(`Oops! Error: ${res.status}`);\r\n    }\r\n  }  \r\n\r\n  _handleError(error) {\r\n    console.error(error);\r\n    return Promise.reject(error.message)\r\n  }\r\n\r\n// cards\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._url}/cards`, { \r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      } \r\n    })\r\n    .then(this._handleResponse)\r\n    .catch(this._handleError)\r\n  }\r\n\r\n  createCard(name, link) {\r\n    return fetch(`${this._url}/cards`, {      \r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link\r\n      }),\r\n      method: 'POST'\r\n    })\r\n      .then(this._handleResponse)\r\n      .catch(this._handleError)\r\n  } \r\n\r\n  deleteCard(id) {\r\n    return fetch((`${this._url}/cards/${id}`), {\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'DELETE'\r\n    })\r\n      .then(this._handleResponse)\r\n      .catch(this._handleError)\r\n  }\r\n\r\n  likeCard(id) {\r\n    return fetch((`${this._url}/cards/likes/${id}`), {      \r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'PUT'\r\n    })\r\n    .then(this._handleResponse)\r\n    .catch(this._handleError)\r\n  }\r\n\r\n  dislikeCard(id) {\r\n    return fetch((`${this._url}/cards/likes/${id}`), {      \r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'DELETE'\r\n    })\r\n    .then(this._handleResponse)\r\n    .catch(this._handleError)\r\n  }\r\n\r\n// user info\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._url}/users/me`, {\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(this._handleResponse)\r\n    .catch(this._handleError)\r\n  }\r\n\r\n  setUserInfo (name, bio) {\r\n    return fetch(`${this._url}/users/me`, {        \r\n        headers: {\r\n          authorization: this._token,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          name: name,\r\n          about: bio\r\n        }),\r\n        method: 'PATCH'\r\n      }\r\n    )\r\n    .then(this._handleResponse)\r\n    .catch(this._handleError)\r\n  }\r\n\r\n  setAvatar(data) {\r\n    return fetch((`${this._url}/users/me/avatar`), {\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n      method: 'PATCH'\r\n    })\r\n    .then(this._handleResponse)\r\n    .catch(this._handleError)\r\n  }\r\n}\r\nexport const api = new Api(identity);","//identity\r\nexport const identity = {\r\n    token: '4f12e696-6331-47e4-913f-e0c0002ac61f',\r\n    url: 'https://mesto.nomoreparties.co/v1/cohort-13',\r\n    id: '13b75ba77788c0a719630101',\r\n}\r\n// // forms\r\n// export const bioForm = document.forms.bio;\r\n// export const photoForm = document.forms.addPhoto;\r\n// export const avatarForm = document.forms.setAvatar;\r\n// // buttons\r\n// export const editProfile = document.querySelector('.profile__button-edit');\r\n// export const addPhoto = document.querySelector('.profile__button-add');\r\n// export const setAvatar = document.querySelector('.profile__button-avatar');\r\n// export const savePhoto = photoForm.querySelector('.popup__save');\r\n// // biography selectors\r\n// export const profileNameSelector = '.profile__name';\r\n// export const profileBioSelector = '.profile__bio';\r\n// export const profileAvatarselector = '.profile__avatar';\r\n// // inputs\r\n// export const inputName = document.querySelector('.popup__input_name');\r\n// export const inputBio = document.querySelector('.popup__input_bio');\r\n// export const inputTitle = document.querySelector('.popup__input_title');\r\n// export const inputLink = document.querySelector('.popup__input_link');\r\n// // container, template\r\n// export const cardContainerSelector = '.elements';\r\n// export const cardTemplate = document.querySelector('#card-template').content;\r\n// // validation\r\n// export const validateOptions = {\r\n//   formSelector: '.popup__form',\r\n//   inputSelector: '.popup__input',\r\n//   submitButtonSelector: '.popup__save',\r\n//   inactiveButtonClass: 'popup__save_disabled',\r\n//   inputErrorClass: 'popup__input_error',\r\n//   errorClass: 'popup__error'\r\n// }\r\n// // initial cards\r\n// export const initialCards = [\r\n//   {\r\n//       title: 'Архыз',\r\n//       link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg'\r\n//   },\r\n//   {\r\n//       title: 'Челябинская область',\r\n//       link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg'\r\n//   },\r\n//   {\r\n//       title: 'Иваново',\r\n//       link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg'\r\n//   },\r\n//   {\r\n//       title: 'Камчатка',\r\n//       link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg'\r\n//   },\r\n//   {\r\n//       title: 'Холмогорский район',\r\n//       link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg'\r\n//   },\r\n//   {\r\n//       title: 'Байкал',\r\n//       link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg'\r\n//   }\r\n// ];\r\n","import React from 'react'\r\n\r\nfunction Card(props) {\r\n  function handleClick() {\r\n    props.onCardClick(props.card);\r\n  }\r\n\r\n  return (\r\n    <div className=\"elements__card\">\r\n      <img src={props.card.link} alt={props.card.name} className=\"elements__photo\" onClick={handleClick} />\r\n      <div className=\"elements__container\">\r\n        <p className=\"elements__title\">{props.card.name}</p>\r\n        <div className=\"elements__like-container\">\r\n          <button type=\"button\" className=\"elements__like\"/>\r\n          <p className=\"elements__counter\">{props.card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n      <button type=\"button\" className=\"elements__trash-bin\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport {api} from '../utils/Api';\r\nimport Card from './Card';\r\nimport defaultAvatar from '../images/userpic.png'\r\n\r\nfunction Main(props) {\r\n\r\n  const [userName, setUserName] = React.useState(false);\r\n  const [userDescription, setUserDescription ] = React.useState(false);\r\n  const [userAvatar, setUserAvatar] = React.useState(\"\");\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    api.getUserInfo()\r\n      .then((res) => {\r\n        setUserName(res.name);\r\n        setUserDescription(res.about);\r\n        setUserAvatar(res.avatar);\r\n        })\r\n  },[])\r\n\r\n  React.useEffect(() => {\r\n    api.getInitialCards()\r\n      .then((res) => {\r\n        setCards(res);\r\n      })\r\n  },[])\r\n\r\n  return(\r\n    <>\r\n      <section className=\"profile\">\r\n        <button className=\"profile__button-avatar\" onClick={props.onEditAvatar}>\r\n          <img src={userAvatar ? userAvatar : defaultAvatar} alt=\"Ваш аватар\" className=\"profile__avatar\" />\r\n        </button>\r\n\r\n        <div className=\"profile__name-container\">\r\n          <h1 className=\"profile__name\">{userName ? userName : 'Имя'}</h1>\r\n          <button type=\"button\" className=\"profile__button-edit\" onClick={props.onEditProfile}/>\r\n        </div>\r\n        <p className=\"profile__bio\">{userDescription ? userDescription : 'Информация'}</p>\r\n        <button type=\"button\" className=\"profile__button-add\" onClick={props.onAddPlace}/>\r\n      </section>\r\n      <main className=\"elements\">\r\n        {cards.map((card) => {\r\n          return(\r\n            <Card key={card._id} card={card} onCardClick={props.onCardClick}/>\r\n          )\r\n        }\r\n        )}\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return(\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">\r\n        © 2020 Mesto Russia\r\n      </p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n\r\n","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n  return(\r\n    <div className={`popup popup_type_${props.name} ${props.isOpen ? 'popup_visibility_visible' : ''}`}>\r\n      <div className=\"popup__container\">\r\n        <button type=\"button\" className=\"popup__exit\" onClick={props.onClose}/>\r\n        <form noValidate name={props.name} method=\"post\" action=\"#\">\r\n          {props.children}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n  return(\r\n    <div className={`popup popup_type_max-photo ${props.isOpen ? 'popup_visibility_visible' : ''}`}>\r\n      <div className=\"popup__container popup__container_type_photo\">\r\n        <button type=\"button\" className=\"popup__exit\" onClick={props.onClose}/>\r\n        <img src={props.selectedCard ? props.selectedCard.link : ''} alt={props.selectedCard.name} className=\"popup__photo\" />\r\n        <h2 className=\"popup__photo-title\">{props.selectedCard.name}</h2>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImagePopup;","import React from 'react';\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport '../index.css';\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState('');\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true)\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true)\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true)\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setImagePopupOpen(true);\n  }\n  function closeAllPopups () {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setImagePopupOpen(false);\n    setSelectedCard('');\n  }\n\n  return (\n    <div className=\"page\">\n\n      {/*BIOGRAPHY POPUP*/}\n      <PopupWithForm\n        name=\"bio\"\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        children={\n          <fieldset className=\"popup__input-container popup__form popup__form_type_two-inputs\">\n            <h2 className=\"popup__title\">Редактировать профиль</h2>\n            <input name=\"name\" id=\"name-input\" type=\"text\" placeholder=\"Введите Ваше имя\" required minLength=\"2\" maxLength=\"40\" className=\"popup__input popup__input_name\" />\n            <span id=\"name-input-error\" className=\"popup__error\"/>\n            <input name=\"bio\" id=\"bio-input\" type=\"text\" placeholder=\"Расскажите о себе\" required minLength=\"2\" maxLength=\"200\" className=\"popup__input popup__input_bio\" />\n            <span id=\"bio-input-error\" className=\"popup__error\"/>\n            <button type=\"submit\" className=\"popup__save\">Сохранить</button>\n          </fieldset>\n        }\n      />\n\n      {/*CARD POPUP*/}\n      <PopupWithForm\n        name=\"card\"\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        children={\n          <fieldset className=\"popup__input-container popup__form popup__form_type_two-inputs\">\n            <h2 className=\"popup__title\">Новое место</h2>\n            <input name=\"name\" id=\"title-input\" type=\"text\" placeholder=\"Название\" required minLength=\"2\" maxLength=\"30\" className=\"popup__input popup__input_title\" />\n            <span id=\"title-input-error\" className=\"popup__error\"/>\n            <input name=\"link\" id=\"link-input\" type=\"url\" placeholder=\"Ссылка на картинку\" required className=\"popup__input popup__input_link\" />\n            <span id=\"link-input-error\" className=\"popup__error\"/>\n            <button type=\"submit\" disabled className=\"popup__save popup__save_disabled\">Сохранить</button>\n          </fieldset>\n        }\n      />\n\n      {/*CHANGE AVATAR POPUP*/}\n      <PopupWithForm\n        name=\"avatar\"\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        children={\n          <fieldset className=\"popup__input-container popup__form popup__form_type_one-input\">\n            <h2 className=\"popup__title\">Обновить аватар</h2>\n            <input name=\"avatar\" id=\"avatar-input\" type=\"url\" placeholder=\"Ссылка на картинку\" required className=\"popup__input popup__input_link\" />\n            <span id=\"avatar-input-error\" className=\"popup__error\"/>\n            <button type=\"submit\" disabled className=\"popup__save popup__save_disabled\">Сохранить</button>\n          </fieldset>\n        }\n      />\n\n      {/*DELETE CARD POPUP*/}\n      <PopupWithForm\n        name=\"delete\"\n        isOpen=\"\"\n        onClose={closeAllPopups}\n        children={\n          <fieldset className=\"popup__input-container popup__form popup__form_type_no-input\">\n            <h2 className=\"popup__title\">Вы уверены?</h2>\n            <button type=\"submit\" className=\"popup__save\">Да</button>\n          </fieldset>\n        }\n      />\n\n      {/*PHOTO POPUP*/}\n      <ImagePopup\n        isOpen={isImagePopupOpen}\n        onClose={closeAllPopups}\n        selectedCard={selectedCard}\n      />\n\n      {/*HEADER*/}\n      <Header />\n\n      {/*PROFILE and ELEMENTS*/}\n      <Main\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onEditAvatar={handleEditAvatarClick}\n        onCardClick={handleCardClick}\n      />\n\n      {/*FOOTER*/}\n      <Footer />\n    </div>\n\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}